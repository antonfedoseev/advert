# syntax=docker/dockerfile:1

FROM golang:1.22.3-alpine AS build

RUN go version
ENV GOPATH=/

WORKDIR /

COPY ["www",                    "/app/server/producer/www"]
COPY ["cmd",                    "/app/server/producer/cmd"]
COPY ["internal",               "/app/server/producer/internal"]
COPY ["pkg",                    "/app/server/producer/pkg"]
COPY ["settings.json",          "/app/server/producer/settings.json"]

# Build Delve
WORKDIR /
RUN go install github.com/go-delve/delve/cmd/dlv@latest

# build go app
WORKDIR /app/server/producer/cmd
RUN go mod tidy -e
RUN go mod download
RUN CGO_ENABLED=0 go build -gcflags "all=-N -l" -o producer ./producer.go

# Final stage
FROM debian:buster

WORKDIR /
COPY --from=build /app/server/producer/cmd/producer     /app/server/producer/cmd/producer
COPY --from=build /app/server/producer/www              /app/server/producer/www
COPY --from=build /bin/dlv /